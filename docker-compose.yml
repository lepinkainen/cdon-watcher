# docker-compose.yml
version: '3.8'

services:
  # Web dashboard service
  web:
    build: .
    container_name: cdon-web
    ports:
      - "8080:8080"
    volumes:
      - ./data:/app/data
      - ./config:/app/config
    environment:
      - SERVICE_MODE=web
      - DB_PATH=/app/data/cdon_movies.db
      - TZ=Europe/Helsinki
      - PATH=/app/.venv/bin:/usr/local/bin:/usr/local/sbin:/usr/sbin:/usr/bin:/sbin:/bin
      - PYTHONPATH=/app
    command: python -m cdon_watcher.monitor web
    restart: unless-stopped
    networks:
      - cdon-net

  # Price monitor service (runs periodically)
  monitor:
    build: .
    container_name: cdon-monitor
    volumes:
      - ./data:/app/data
      - ./config:/app/config
    environment:
      - SERVICE_MODE=monitor
      - DB_PATH=/app/data/cdon_movies.db
      - CHECK_INTERVAL_HOURS=6
      - TZ=Europe/Helsinki
      - PATH=/app/.venv/bin:/usr/local/bin:/usr/local/sbin:/usr/sbin:/usr/bin:/sbin:/bin
      - PYTHONPATH=/app
      # Email configuration (optional)
      - EMAIL_ENABLED=false
      - EMAIL_FROM=${EMAIL_FROM:-}
      - EMAIL_TO=${EMAIL_TO:-}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD:-}
      - SMTP_SERVER=${SMTP_SERVER:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      # Discord webhook (optional)
      - DISCORD_WEBHOOK=${DISCORD_WEBHOOK:-}
    command: python -m cdon_watcher.monitor monitor
    restart: unless-stopped
    depends_on:
      - web
    networks:
      - cdon-net

  # One-time crawler (use for initial setup or manual runs)
  crawler:
    build: .
    container_name: cdon-crawler
    volumes:
      - ./data:/app/data
      - ./config:/app/config
    environment:
      - SERVICE_MODE=crawl
      - DB_PATH=/app/data/cdon_movies.db
      - TZ=Europe/Helsinki
      - PATH=/app/.venv/bin:/usr/local/bin:/usr/local/sbin:/usr/sbin:/usr/bin:/sbin:/bin
      - PYTHONPATH=/app
    command: python -m cdon_watcher.monitor crawl
    profiles:
      - crawler
    networks:
      - cdon-net

networks:
  cdon-net:
    driver: bridge

volumes:
  data:
    driver: local
