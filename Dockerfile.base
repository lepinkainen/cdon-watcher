# Dockerfile.base - Optimized base image for web and monitor services (no Playwright)
FROM python:3-slim

# Install uv and clean up in single layer
RUN pip install --no-cache-dir uv && \
    pip cache purge

# Set working directory
WORKDIR /app

# Copy dependency files for better caching
COPY pyproject.toml uv.lock ./

# Create non-root user for security
RUN useradd -m -u 1000 tracker

# Copy application files
COPY --chown=tracker:tracker src/ /app/src/

# Install package with only runtime dependencies (excluding Playwright) and clean up
RUN uv pip install --system --no-cache -e . --no-deps && \
    uv pip install --system --no-cache \
        "fastapi>=0.104.0" \
        "sqlmodel>=0.0.14" \
        "uvicorn[standard]>=0.24.0" \
        "aiosqlite>=0.19.0" \
        "aiohttp>=3.9.1" \
        "python-dotenv>=1.0.0" \
        "requests>=2.31.0" \
        "beautifulsoup4>=4.12.0" \
        "jinja2>=3.1.0" && \
    uv cache clean && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Set ownership of app directory
RUN chown -R tracker:tracker /app

# Switch to non-root user
USER tracker

# Create directories for database and posters (will be mounted as volume)
RUN mkdir -p /app/data/posters

# Environment variables for configuration
ENV PYTHONUNBUFFERED=1
ENV DB_PATH=/app/data/cdon_movies.db
ENV POSTER_DIR=/app/data/posters
ENV API_HOST=0.0.0.0
ENV API_PORT=8080
ENV PYTHONPATH=/app

# Expose API port
EXPOSE 8080

# Default command (can be overridden)
CMD ["python", "-m", "cdon_watcher", "web"]