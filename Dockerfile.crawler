# Dockerfile.crawler - Multi-stage optimized image for crawler service with Playwright

# Build stage
FROM python:3-slim as builder

# Install uv and system dependencies needed for building
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        build-essential \
        curl && \
    pip install --no-cache-dir uv && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy dependency files
COPY pyproject.toml uv.lock ./
COPY src/ /app/src/

# Install all dependencies including Playwright
RUN uv pip install --system --no-cache -e .

# Runtime stage
FROM python:3-slim as runtime

# Copy Python packages from builder first (to have playwright command available)
COPY --from=builder /usr/local/lib/python3.13/site-packages/ /usr/local/lib/python3.13/site-packages/
COPY --from=builder /usr/local/bin/ /usr/local/bin/

# Install Playwright system dependencies using official command
RUN playwright install-deps chromium && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Create non-root user
RUN useradd -m -u 1000 tracker

WORKDIR /app

# Copy application files
COPY --chown=tracker:tracker src/ /app/src/

# Set path for Playwright browsers and install only chromium
ENV PLAYWRIGHT_BROWSERS_PATH=/app/playwright_browsers
RUN mkdir -p ${PLAYWRIGHT_BROWSERS_PATH} && \
    playwright install chromium && \
    chown -R tracker:tracker ${PLAYWRIGHT_BROWSERS_PATH} /app

# Switch to non-root user
USER tracker

# Create directories for database and posters (will be mounted as volume)
RUN mkdir -p /app/data/posters

# Environment variables for configuration
ENV PYTHONUNBUFFERED=1
ENV DB_PATH=/app/data/cdon_movies.db
ENV POSTER_DIR=/app/data/posters
ENV API_HOST=0.0.0.0
ENV API_PORT=8080
ENV PYTHONPATH=/app
ENV PLAYWRIGHT_BROWSERS_PATH=/app/playwright_browsers

# Expose API port
EXPOSE 8080

# Default command (can be overridden)
CMD ["python", "-m", "cdon_watcher", "crawl"]